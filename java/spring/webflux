webflux

지금 일단 파악한바로는.. Netty를 기반으로 통신하게되니.. 요청이들어오면 url mapping(router) 해주고 비지니스 로직 실행하는식으로 동작하는듯함.. 즉, 라우터의 역할이 특정 핸들러로 연결시켜서 핸들러에서 비지니스로직을 실행하는느낌..


설명굿
=> https://blog.naver.com/PostView.nhn?blogId=spdlqjdudghl&logNo=221589536704&categoryNo=0&parentCategoryNo=0&viewDate=&currentPage=1&postListTopCurrentPage=1&from=postView


백프레셔(back pressure) : Publisher 에서 발행하고, Subscriber에서 구독할 때, Publisher 에서 데이터를 Subscriber 로 Push 하는 방식이 아니라, Pull 방식으로 Subscriber 가 Publisher 로 처리할 수 있는 양의 크기만큼 데이터를 요청 함으로써 Subscriber의 장애를 방지하기 위함이다.
즉, 다이나믹 풀 방식의 데이터 요청을 통해서 구독자가 수용할 수 있는 만큼 데이터를 요청하는 방식이다.

스프링5는 Spring Boot 2 부터 도입이 되었으니, Spring Boot 2 의 stack 는 아래와 같다.
    -개발자는 Reactive Stack 를 사용할지, Servlet Stack 를 사용할지 선택을 해야 한다. 두개의 stack 을 동시에 사용할 수 없다.
    이미지 : https://blog.kakaocdn.net/dn/u6sBC/btqCLdDhiTm/lX2HdQpFWbZ1F6MVDIfAz1/img.png

https://hyunsoori.tistory.com/3

webflux 생긴이유에 대해서 설명 잘해줌 : https://heeyeah.github.io/spring/2020-02-29-web-flux/

webflux 다양하게 사용하는 예제 설명 굿 : https://hojak99.tistory.com/453

webflux 사용하여 service 만든 예제 : https://m.blog.naver.com/PostView.nhn?blogId=dg110&logNo=221347127351&proxyReferer=https:%2F%2Fwww.google.com%2F

토비 유투브도 참고할것!


https://tech.kakao.com/2018/05/29/reactor-programming/