WAS와 WEB서버의 차이

WAS는 동적인 데이터를 처리..(jsp, php..)
	ex) tomcat
	
WEB서버는 정적인 데이터를 처리..(html ..)
	ex) apache
	
사용자가 웹사이트에 접속하였을때 첫페이지에 굳이 동적인 데이터처리가 필요하지않다면, 웹서버가 바로 정적인 데이터를 넘겨주면 된다..
그러나, 프로그래밍적인 계산이 필요하다면(동적인데이터처리) WAS에서 처리를 해서 전달한다!(WAS에서 받은거를 SPRING의 RequestMapping 으로 시작해서 비지니스로직 태우고 적절한 jsp(modelAndView) 만들어서전달)

만약 정적인 처리만 필요로하는건데 계속 어플리케이션까지 왓다리갓다리하면 자원낭비겟지..? 그래서 apache라는 웹서버가 그런것들 처리해줌

*WAS에서는 정적인것과 동적인것 모두 처리하도록 잘 구성되어있기때문에 WAS만 써도 상관은 없지만, 규모가 커질수록 WAS와 WEB서버를 나누는게 관리포인트에서 유리
-WAS가 장애가 나면 간단한 정적 리소스 파일전달하는것도 어려워질것이기때문에 분리가 유리 
-또한, WAS에서는 비용이 비싼 처리들이 주로이루어지는데, 비용이 값싼 정적리소스 처리를 같이해야하는것에대한 에너지 분산이 일어남.. 즉 WAS는 어차피 고생많은데, 더 고생시키지말자..ㅎ
-만약 HTTP API형식으로 데이터만 전달해준다면 굳이 웹서버는필요없음~

Client 요청 -> 웹서버 -> WAS (-> Spring..) -> DB

=> 정적 리소스에 대한 요청이 많으면 웹서버만 추가적으로 증설하면될것이고, 어플리케이션 로직이 필요한 요청이 많이들어오면 WAS증설을 고려하면된다! 즉, 효율적인 리소스 관리가 이렇게 분리함으로써 가능하다!

설명 잘나옴 : https://0ver-grow.tistory.com/134