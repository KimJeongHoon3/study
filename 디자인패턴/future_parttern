future패턴은 결과를 전달받는 티켓을 받는것과 같다. 작업할 함수를 호출하고 해당함수내에서 future 객체를 생성한뒤에 그것을 반환해준다. 물론 함수내에서 실행되는 결과는 future에 담기게된다. 그리고 해당함수를 호출한 스레드는 future를 통해 결과를 전달받기위해서 future에 결과가 잘 적재되었는지 지속적으로 확인이 필요하다.. 그렇게된다면 블럭되어있는것을 기다리는것보다는 좀더 개선되겠지만 결과적으로 또 기다려야하는 일이 일어난다.. 
이에대한 문제를 해결하기위해서 future를 상속해서 콜백클래스를 전달받을수잇도록 해주어, 함수의 작업을 수행한 스레드에서 콜백클래스를 실행할수있도록하여, 처음 함수를 호출한 스레드가 더이상 신경쓰지않도록 할수도있다! 


그러나 netty를 살펴보면 꼭 콜백클래스를 다른 스레드가 수행하도록 할 필요는 없을듯하다.. 해당 콜백 클래스를 실행하는 시점이 언제인지가 중요하기때문에, 동일한 스레드가 실행하지않도록 해야하는것은 아닌듯하다..
(이에대한 예제는 netty에서 ctx.write함수의 콜백사용하고 ctx.writeAndFlush 함수의 콜백사용을 살펴보면됨)