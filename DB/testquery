show tables;

analyze table departments;
analyze table dept_emp;
analyze table dept_manager;
analyze table employee_name;
analyze table employees;
analyze table salaries;
analyze table tb_dual;
analyze table titles;

show global variables like 'opti%';

explain
select e.emp_no,e.first_name,s.from_date,s.salary
from employees e
    join salaries s on e.emp_no = s.emp_no
limit 10;

select count(*)
from employees;

explain
select *
from employees e1
where e1.emp_no in (
    select e2.emp_no
from employees e2
where e2.first_name='Matt'

);

explain extended
select e.first_name,
       (select count(*)
           from dept_emp de
                ,dept_manager dm
            where de.dept_no=dm.dept_no and de.emp_no=e.emp_no) as Cnt
from employees e
where e.first_name='Matt';
show warnings ;

explain
select *
from employees e1
where e1.emp_no in (
    select emp_no
from salaries
where salary between 100 and 39000

);

explain
select emp_no
from salaries
where salary between 100 and 1000;

explain
select count(*)
from employees e1
where e1.first_name=(SELECT first_name from employees e2 where e2.emp_no=10001);

explain
select *
from salaries s
    join employees e
        on s.emp_no=e.emp_no
where s.salary=10001;

show index from salaries;

explain
select *
from departments
where dept_no in (
    select dept_no from dept_emp where emp_no=10001
    );

explain
select dept_no from dept_emp where emp_no=10001;

explain
select * from departments where dept_no in (
    select dept_no from dept_emp where dept_no BETWEEN 'd001' and 'd003'
    );

explain
select * from departments order by dept_name desc limit 10;

explain
select first_name from employees limit 10;

explain extended
select *
from employees e1
where e1.first_name=(SELECT first_name from employees e2 where e2.last_name='Facello');
show warnings ;


explain
select * from employees order by last_name desc;

explain
select emp_no, MIN(from_date), MAX(from_date)
from salaries
group by emp_no;

explain
select * from employees group by gender order by min(emp_no);
select * from employees where emp_no=10001;
select * from employees where emp_no=10002;

explain
select * from departments d
where exists (select 1 from dept_emp de where de.dept_no=d.dept_no);

explain
select d.* from departments d
    join dept_emp p on d.dept_no=p.dept_no
group by d.dept_no;


explain
select * from employees where first_name like 'Lee%' and first_name like '%matt';

explain
select * from employees where first_name>='A' and first_name<'B';

explain
select /*straight_join*/
    e.first_name,e.last_name,d.dept_name
from employees e
    join departments d
    join dept_emp de
        on e.emp_no=de.emp_no and d.dept_no=de.dept_no
where e.emp_no


show global variables like 'query_cache%';

select sql_no_cache count(*) from employees where last_name='Facello';


explain extended
select sql_no_cache *
from employees e
    join salaries s on e.emp_no = s.emp_no
where e.emp_no between 100002 and 100010
order by e.last_name;

explain extended
select straight_join e.last_name,avg(s.salary)
from employees e
    join salaries s on e.emp_no = s.emp_no
group by e.last_name;

show warnings ;
show index from employees;

show variables like 'optimi%';

explain
select straight_join sql_no_cache e.first_name,sum(s.salary)
from employees e
    join salaries s
        on e.emp_no=s.emp_no
group by e.first_name;

show session status like 'Created_tmp%tables';
-- group by에서 sum썼다고 반드시 임시테이블 만드는것은 아니네..


select *
from employees e
    left join salaries s
        on e.emp_no=s.emp_no
where e.emp_no is null;

select count(*)
from salaries;

show index from salaries;


select * from employees;

set optimizer_switch ='mrr=OFF';
set optimizer_switch ='mrr_sort_keys=OFF';

explain extended
select sql_no_cache * from employees where first_name>='A' and first_name<'B';

explain
select * from employees
where first_name='Matt'
    and hire_date between '1995-01-01' and '2000-01-01';

show index from employees;


explain
select *
from employees
where last_name='Facello' and emp_no=10001;


explain extended
select * from employees
where first_name like 'Matt%' and hire_date between '1995-01-01' and '2000-01-01';

explain
select * from employees
where first_name like 'Matt%' and hire_date='1991-07-22';

explain
select * from employees
where last_name >= 'A' and last_name <'C'
limit 1000;

explain extended


select sql_no_cache straight_join *
from employees e
    join dept_emp de
    on e.emp_no=de.emp_no
where de.from_date<'1995-01-01' and e.emp_no>109004;

show global variables like 'opti%';
show global variables like 'join%';
set global join_cache_level=8;
set optimizer_switch ='mrr=on';
set optimizer_switch ='mrr_sort_keys=on';

set optimizer_switch ='mrr=off';
set optimizer_switch ='mrr_sort_keys=off';

explain
select sql_no_cache * from dept_emp de, departments d where d.dept_no=de.dept_no;

show index from titles;

set optimizer_switch ='materialization=on';
set optimizer_switch ='firstmatch=on';

explain
select sql_no_cache * from departments d where d.dept_no in(
    select de.dept_no from dept_emp de
    );

explain
select sql_no_cache distinct d.*
from departments d
    join dept_emp de
        on d.dept_no=de.dept_no;

explain extended
select * from employees e
where e.emp_no IN (select de.emp_no from dept_emp de where de.dept_no='d009')
or e.first_name='Matt';

explain
select distinct first_name, last_name
from employees
where emp_no between 10001 and 10200;

select distinct first_name, last_name
from employees
where emp_no between 10001 and 10200;

select count(distinct first_name, last_name)
from employees
where emp_no between 10001 and 10200;

explain
select sql_no_cache distinct e.first_name
from employees e, salaries s
where e.emp_no=s.emp_no
and e.emp_no between 100001 and 100100;

show session status like 'Created_tmp%tables';

show index from salaries;

explain
select sql_no_cache distinct e.first_name
from employees e;



show plugins soname;

show engine innodb status;

show variables like 'innodb_print_all%'


create table kafka_insert_err(
    seq int auto_increment primary key,
    bsid varchar(30) not null,
    content text not null,
    res_code varchar(5),
    type tinyint not null comment '0 : ata report topic producing시 에러, 1: NBGMS_KKO_RDS_ATA_DB producing시 에러, 2: NBGMS_KKO_RDS_DB producing시 에러, 3:NBGMS_KKO_RDS_RA_RESPONSE_POLL producing시 에러',
    reg_date datetime default sysdate(),
    update_date datetime comment '처리 완료 시간',
    flag tinyint default 0 comment '처리 여부',
    err_svr varchar(10) comment '에러 발생 서버',
    index idx_1(bsid,type,flag,res_code)
)